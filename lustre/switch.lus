

node Switch( Set, Reset, Init : bool ) returns ( X : bool );
let

    X = if Set then true 
           else if Reset then false
           else (Init -> pre X);
tel

-- node Switch2( Set, Reset, Init : bool ) returns ( X : bool );
-- let
--   X = if Reset then false else
--         if Set then true else
--           (Init -> pre(X));
-- tel


-- node Switch3( Set, Reset, Init : bool ) returns ( X : bool );
-- let
--   X = Set or (not Reset and (Init -> pre(X))) ;
-- tel


------------------------------------------------------------------
-- The following observer expresses 3 safety requirements
-- for the first switch.


node ReqSwitch( Set, Reset, Init : bool )
returns ( R1, R2, R3 : bool );
var X : bool;
let
  X = Switch( Set, Reset, Init );

  -- setting turns the switch on
  R1  =  (Set => X);  -- not Set or X;
  
  -- resetting turns the switch off
  R2 =  (not Set and Reset) =>  not X;
  
  -- doing nothing maintains the previous value
  R3 = true -> ((not Set and not Reset) => X = pre X);

  --!PROPERTY:  R3;
tel

